import { doc } from 'prettier';
import { NonterminalKind } from '@nomicfoundation/slang/cst';
import { sortFunctionAttributes } from '../slang-utils/sort-function-attributes.js';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { FallbackFunctionAttribute } from './FallbackFunctionAttribute.js';
const { line } = doc.builders;
export class FallbackFunctionAttributes {
    constructor(ast, options) {
        this.kind = NonterminalKind.FallbackFunctionAttributes;
        let metadata = getNodeMetadata(ast, true);
        this.items = ast.items.map((item) => new FallbackFunctionAttribute(item, options));
        metadata = updateMetadata(metadata, [this.items]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
        this.items = this.items.sort(sortFunctionAttributes);
    }
    print(path, print) {
        return path.map(print, 'items').map((item) => [line, item]);
    }
}
//# sourceMappingURL=FallbackFunctionAttributes.js.map
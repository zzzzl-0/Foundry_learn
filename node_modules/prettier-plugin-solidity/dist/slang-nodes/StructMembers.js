import { doc } from 'prettier';
import { NonterminalKind } from '@nomicfoundation/slang/cst';
import { printSeparatedList } from '../slang-printers/print-separated-list.js';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { StructMember } from './StructMember.js';
const { hardline } = doc.builders;
export class StructMembers {
    constructor(ast, options) {
        this.kind = NonterminalKind.StructMembers;
        let metadata = getNodeMetadata(ast, true);
        this.items = ast.items.map((item) => new StructMember(item, options));
        metadata = updateMetadata(metadata, [this.items]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
    }
    print(path, print) {
        return this.items.length > 0
            ? printSeparatedList(path.map(print, 'items'), {
                firstSeparator: hardline,
                separator: hardline
            })
            : '';
    }
}
//# sourceMappingURL=StructMembers.js.map
import { NonterminalKind } from '@nomicfoundation/slang/cst';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { MappingKey } from './MappingKey.js';
import { MappingValue } from './MappingValue.js';
export class MappingType {
    constructor(ast, options) {
        this.kind = NonterminalKind.MappingType;
        let metadata = getNodeMetadata(ast);
        this.keyType = new MappingKey(ast.keyType);
        this.valueType = new MappingValue(ast.valueType, options);
        metadata = updateMetadata(metadata, [this.keyType, this.valueType]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
    }
    print(path, print) {
        return [
            'mapping(',
            path.call(print, 'keyType'),
            ' => ',
            path.call(print, 'valueType'),
            ')'
        ];
    }
}
//# sourceMappingURL=MappingType.js.map
import { NonterminalKind } from '@nomicfoundation/slang/cst';
import { doc } from 'prettier';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { YulPaths } from './YulPaths.js';
import { YulAssignmentOperator } from './YulAssignmentOperator.js';
import { YulExpression } from './YulExpression.js';
const { join } = doc.builders;
export class YulVariableAssignmentStatement {
    constructor(ast, options) {
        this.kind = NonterminalKind.YulVariableAssignmentStatement;
        let metadata = getNodeMetadata(ast);
        this.variables = new YulPaths(ast.variables);
        this.assignment = new YulAssignmentOperator(ast.assignment);
        this.expression = new YulExpression(ast.expression, options);
        metadata = updateMetadata(metadata, [
            this.variables,
            this.assignment,
            this.expression
        ]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
    }
    print(path, print) {
        return join(' ', [
            path.call(print, 'variables'),
            path.call(print, 'assignment'),
            path.call(print, 'expression')
        ]);
    }
}
//# sourceMappingURL=YulVariableAssignmentStatement.js.map
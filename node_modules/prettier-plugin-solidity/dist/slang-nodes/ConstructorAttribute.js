import { NonterminalKind, TerminalNode } from '@nomicfoundation/slang/cst';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { ModifierInvocation } from './ModifierInvocation.js';
export class ConstructorAttribute {
    constructor(ast, options) {
        this.kind = NonterminalKind.ConstructorAttribute;
        let metadata = getNodeMetadata(ast);
        this.variant =
            ast.variant instanceof TerminalNode
                ? ast.variant.unparse()
                : new ModifierInvocation(ast.variant, options);
        metadata = updateMetadata(metadata, typeof this.variant === 'string' ? [] : [this.variant]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
    }
    print(path, print) {
        return typeof this.variant === 'string'
            ? this.variant
            : path.call(print, 'variant');
    }
}
//# sourceMappingURL=ConstructorAttribute.js.map
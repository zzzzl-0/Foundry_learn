import { NonterminalKind } from '@nomicfoundation/slang/cst';
import { printFunction } from '../slang-printers/print-function.js';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { ParametersDeclaration } from './ParametersDeclaration.js';
import { FunctionTypeAttributes } from './FunctionTypeAttributes.js';
import { ReturnsDeclaration } from './ReturnsDeclaration.js';
export class FunctionType {
    constructor(ast, options) {
        this.kind = NonterminalKind.FunctionType;
        let metadata = getNodeMetadata(ast);
        this.parameters = new ParametersDeclaration(ast.parameters, options);
        this.attributes = new FunctionTypeAttributes(ast.attributes);
        if (ast.returns) {
            this.returns = new ReturnsDeclaration(ast.returns, options);
        }
        metadata = updateMetadata(metadata, [
            this.parameters,
            this.attributes,
            this.returns
        ]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
    }
    print(path, print) {
        return printFunction('function', this, path, print);
    }
}
//# sourceMappingURL=FunctionType.js.map
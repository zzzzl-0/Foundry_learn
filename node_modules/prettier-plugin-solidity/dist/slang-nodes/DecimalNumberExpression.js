import { NonterminalKind } from '@nomicfoundation/slang/cst';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { joinExisting } from '../slang-utils/join-existing.js';
import { NumberUnit } from './NumberUnit.js';
export class DecimalNumberExpression {
    constructor(ast) {
        this.kind = NonterminalKind.DecimalNumberExpression;
        let metadata = getNodeMetadata(ast);
        this.literal = ast.literal.unparse();
        if (ast.unit) {
            this.unit = new NumberUnit(ast.unit);
        }
        metadata = updateMetadata(metadata, [this.unit]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
    }
    print(path, print) {
        return joinExisting(' ', [this.literal, path.call(print, 'unit')]);
    }
}
//# sourceMappingURL=DecimalNumberExpression.js.map
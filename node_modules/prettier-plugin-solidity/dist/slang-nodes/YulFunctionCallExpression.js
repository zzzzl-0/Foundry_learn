import { NonterminalKind } from '@nomicfoundation/slang/cst';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { YulExpression } from './YulExpression.js';
import { YulArguments } from './YulArguments.js';
export class YulFunctionCallExpression {
    constructor(ast, options) {
        this.kind = NonterminalKind.YulFunctionCallExpression;
        let metadata = getNodeMetadata(ast);
        this.operand = new YulExpression(ast.operand, options);
        this.arguments = new YulArguments(ast.arguments, options);
        metadata = updateMetadata(metadata, [this.operand, this.arguments]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
    }
    print(path, print) {
        return [
            path.call(print, 'operand'),
            '(',
            path.call(print, 'arguments'),
            ')'
        ];
    }
}
//# sourceMappingURL=YulFunctionCallExpression.js.map
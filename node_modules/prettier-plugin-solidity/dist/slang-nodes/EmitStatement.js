import { NonterminalKind } from '@nomicfoundation/slang/cst';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { IdentifierPath } from './IdentifierPath.js';
import { ArgumentsDeclaration } from './ArgumentsDeclaration.js';
export class EmitStatement {
    constructor(ast, options) {
        this.kind = NonterminalKind.EmitStatement;
        let metadata = getNodeMetadata(ast);
        this.event = new IdentifierPath(ast.event);
        this.arguments = new ArgumentsDeclaration(ast.arguments, options);
        metadata = updateMetadata(metadata, [this.event, this.arguments]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
    }
    print(path, print) {
        return [
            'emit ',
            path.call(print, 'event'),
            path.call(print, 'arguments'),
            ';'
        ];
    }
}
//# sourceMappingURL=EmitStatement.js.map
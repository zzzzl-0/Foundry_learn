import { doc } from 'prettier';
import { NonterminalKind } from '@nomicfoundation/slang/cst';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { Identifier } from './Identifier.js';
import { ParametersDeclaration } from './ParametersDeclaration.js';
const { group } = doc.builders;
export class CatchClauseError {
    constructor(ast, options) {
        this.kind = NonterminalKind.CatchClauseError;
        let metadata = getNodeMetadata(ast);
        if (ast.name) {
            this.name = new Identifier(ast.name);
        }
        this.parameters = new ParametersDeclaration(ast.parameters, options);
        metadata = updateMetadata(metadata, [this.parameters]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
    }
    print(path, print) {
        return [
            path.call(print, 'name'),
            group(path.call(print, 'parameters')),
            ' '
        ];
    }
}
//# sourceMappingURL=CatchClauseError.js.map
import { doc } from 'prettier';
import { NonterminalKind } from '@nomicfoundation/slang/cst';
import { printSeparatedItem } from '../slang-printers/print-separated-item.js';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { Expression } from './Expression.js';
import { Statement } from './Statement.js';
const { group, indent, line } = doc.builders;
export class WhileStatement {
    constructor(ast, options) {
        this.kind = NonterminalKind.WhileStatement;
        let metadata = getNodeMetadata(ast);
        this.condition = new Expression(ast.condition, options);
        this.body = new Statement(ast.body, options);
        metadata = updateMetadata(metadata, [this.condition, this.body]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
    }
    print(path, print) {
        return [
            'while (',
            printSeparatedItem(path.call(print, 'condition')),
            ')',
            this.body.variant.kind === NonterminalKind.Block
                ? [' ', path.call(print, 'body')]
                : group(indent([line, path.call(print, 'body')]))
        ];
    }
}
//# sourceMappingURL=WhileStatement.js.map
import { NonterminalKind, TerminalKind, TerminalNode } from '@nomicfoundation/slang/cst';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { StringLiteral } from './StringLiteral.js';
import { Identifier } from './Identifier.js';
export class ExperimentalFeature {
    constructor(ast, options) {
        this.kind = NonterminalKind.ExperimentalFeature;
        let metadata = getNodeMetadata(ast);
        this.variant =
            ast.variant instanceof TerminalNode
                ? new Identifier(ast.variant)
                : new StringLiteral(ast.variant, options);
        metadata = updateMetadata(metadata, this.variant.kind === TerminalKind.Identifier ? [] : [this.variant]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
    }
    print(path, print) {
        return path.call(print, 'variant');
    }
}
//# sourceMappingURL=ExperimentalFeature.js.map
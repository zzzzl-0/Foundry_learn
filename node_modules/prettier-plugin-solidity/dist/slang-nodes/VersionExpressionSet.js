import { doc } from 'prettier';
import { NonterminalKind } from '@nomicfoundation/slang/cst';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { VersionExpression } from './VersionExpression.js';
const { join } = doc.builders;
export class VersionExpressionSet {
    constructor(ast) {
        this.kind = NonterminalKind.VersionExpressionSet;
        let metadata = getNodeMetadata(ast, true);
        this.items = ast.items.map((item) => new VersionExpression(item));
        metadata = updateMetadata(metadata, [this.items]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
    }
    print(path, print) {
        return join(' ', path.map(print, 'items'));
    }
}
//# sourceMappingURL=VersionExpressionSet.js.map
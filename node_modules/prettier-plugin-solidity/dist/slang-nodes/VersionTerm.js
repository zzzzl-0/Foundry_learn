import { NonterminalKind } from '@nomicfoundation/slang/cst';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { VersionOperator } from './VersionOperator.js';
import { VersionLiteral } from './VersionLiteral.js';
export class VersionTerm {
    constructor(ast) {
        this.kind = NonterminalKind.VersionTerm;
        let metadata = getNodeMetadata(ast);
        if (ast.operator) {
            this.operator = new VersionOperator(ast.operator);
        }
        this.literal = new VersionLiteral(ast.literal);
        metadata = updateMetadata(metadata, [this.operator, this.literal]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
    }
    print(path, print) {
        return [path.call(print, 'operator'), path.call(print, 'literal')];
    }
}
//# sourceMappingURL=VersionTerm.js.map
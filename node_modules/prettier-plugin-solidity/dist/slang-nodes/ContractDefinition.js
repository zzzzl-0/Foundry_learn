import { doc } from 'prettier';
import { coerce, satisfies } from 'semver';
import { NonterminalKind } from '@nomicfoundation/slang/cst';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { Identifier } from './Identifier.js';
import { ContractSpecifiers } from './ContractSpecifiers.js';
import { ContractMembers } from './ContractMembers.js';
const { group, line } = doc.builders;
export class ContractDefinition {
    constructor(ast, options) {
        var _a;
        this.kind = NonterminalKind.ContractDefinition;
        let metadata = getNodeMetadata(ast);
        this.abstractKeyword = (_a = ast.abstractKeyword) === null || _a === void 0 ? void 0 : _a.unparse();
        this.name = new Identifier(ast.name);
        this.specifiers = new ContractSpecifiers(ast.specifiers, options);
        this.members = new ContractMembers(ast.members, options);
        metadata = updateMetadata(metadata, [this.specifiers, this.members]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
        this.cleanModifierInvocationArguments(options);
    }
    cleanModifierInvocationArguments(options) {
        // Older versions of Solidity defined a constructor as a function having
        // the same name as the contract.
        const compiler = coerce(options.compiler);
        if (compiler && !satisfies(compiler, '>=0.5.0')) {
            for (const member of this.members.items) {
                if (member.variant.kind === NonterminalKind.FunctionDefinition &&
                    member.variant.name.variant.value !== this.name.value) {
                    member.variant.cleanModifierInvocationArguments();
                }
            }
        }
    }
    print(path, print) {
        return [
            group([
                this.abstractKeyword ? 'abstract ' : '',
                'contract ',
                path.call(print, 'name'),
                path.call(print, 'specifiers'),
                this.specifiers.items.length > 0 ? '' : line,
                '{'
            ]),
            path.call(print, 'members'),
            '}'
        ];
    }
}
//# sourceMappingURL=ContractDefinition.js.map
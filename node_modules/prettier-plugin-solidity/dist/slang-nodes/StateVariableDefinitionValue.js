import { doc } from 'prettier';
import { NonterminalKind } from '@nomicfoundation/slang/cst';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { Expression } from './Expression.js';
const { group, indent, line } = doc.builders;
export class StateVariableDefinitionValue {
    constructor(ast, options) {
        this.kind = NonterminalKind.StateVariableDefinitionValue;
        let metadata = getNodeMetadata(ast);
        this.value = new Expression(ast.value, options);
        metadata = updateMetadata(metadata, [this.value]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
    }
    print(path, print) {
        return this.value.variant.kind === NonterminalKind.ArrayExpression
            ? [' = ', path.call(print, 'value')]
            : group([' =', indent([line, path.call(print, 'value')])]);
    }
}
//# sourceMappingURL=StateVariableDefinitionValue.js.map
import { NonterminalKind } from '@nomicfoundation/slang/cst';
import { getNodeMetadata, updateMetadata } from '../slang-utils/metadata.js';
import { EventParametersDeclaration } from './EventParametersDeclaration.js';
import { Identifier } from './Identifier.js';
export class EventDefinition {
    constructor(ast, options) {
        var _a;
        this.kind = NonterminalKind.EventDefinition;
        let metadata = getNodeMetadata(ast);
        this.name = new Identifier(ast.name);
        this.parameters = new EventParametersDeclaration(ast.parameters, options);
        this.anonymousKeyword = (_a = ast.anonymousKeyword) === null || _a === void 0 ? void 0 : _a.unparse();
        metadata = updateMetadata(metadata, [this.parameters]);
        this.comments = metadata.comments;
        this.loc = metadata.loc;
    }
    print(path, print) {
        return [
            'event ',
            path.call(print, 'name'),
            path.call(print, 'parameters'),
            this.anonymousKeyword ? ' anonymous' : '',
            ';'
        ];
    }
}
//# sourceMappingURL=EventDefinition.js.map